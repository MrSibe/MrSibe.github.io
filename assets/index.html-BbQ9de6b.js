import{_ as i,c as a,a as t,o as n}from"./app-DMdwLNUM.js";const e={};function l(h,s){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="软件开发流程" tabindex="-1"><a class="header-anchor" href="#软件开发流程"><span>软件开发流程</span></a></h2><h3 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析"><span>需求分析</span></a></h3><p>完成需求规格说明书、产品原型编写。</p><ol><li><strong>需求规格说明书</strong>：使用 Word 文档来描述当前项目的各个组成部分，如：系统定义、应用环境、功能规格、性能需求等。</li><li><strong>产品原型</strong>：一般是通过网页 (html) 的形式展示当前的页面展示什么样的数据，页面的布局是什么样子的，点击某个菜单，打开什么页面等。</li></ol><h3 id="设计" tabindex="-1"><a class="header-anchor" href="#设计"><span>设计</span></a></h3><ol><li>UI设计</li><li>数据库设计</li><li>接口设计</li></ol><h3 id="编码" tabindex="-1"><a class="header-anchor" href="#编码"><span>编码</span></a></h3><p>编写项目代码，并完成单元测试。</p><ul><li>项目代码编写：作为软件开发工程师，我们需要对项目的模块功能分析后，进行编码实现。</li><li>单元测试：编码实现完毕后，进行单元测试，单元测试通过后再进入到下一阶段。</li></ul><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><p>在该阶段中主要由测试人员对部署在测试环境的项目进行功能测试，并出具测试报告。</p><h3 id="上线运维" tabindex="-1"><a class="header-anchor" href="#上线运维"><span>上线运维</span></a></h3><p>在项目上线之前，会由运维人员准备服务器上的软件环境安装、配置，配置完毕后，再将我们开发好的项目部署在服务器上运行。</p><h2 id="苍穹外卖项目" tabindex="-1"><a class="header-anchor" href="#苍穹外卖项目"><span>苍穹外卖项目</span></a></h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h3><p>一个为餐饮企业（餐厅、饭店）定制的软件产品，包括<strong>系统管理后台</strong>和<strong>小程序端应用</strong>两部分。</p><ol><li><strong>系统管理后台</strong>（面向餐厅老板）：可以对餐厅的分类、菜品、套餐、订单、员工等进行管理维护，对餐厅的各类数据进行统计。</li><li><strong>小程序端</strong>（面向消费者）：可以在线浏览菜品、添加购物车、下单、支付、催单等。</li></ol><h3 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h3><p><img src="https://raw.githubusercontent.com/MrSibe/obsidian_images/main/image-20221106185646994.png" alt="image-20221106185646994.png"></p><h4 id="用户层" tabindex="-1"><a class="header-anchor" href="#用户层"><span>用户层</span></a></h4><ul><li>H5、Vue.js、ElementUI、Apache Echarts（展示图表）等技术用于系统管理后台前端页面。</li><li>微信小程序用于移动端应用。</li></ul><h4 id="网关层" tabindex="-1"><a class="header-anchor" href="#网关层"><span>网关层</span></a></h4><ul><li><strong>Nginx</strong>：作为Http服务器，部署静态资源，访问性能高。还可实现反向代理和负载均衡。</li></ul><h4 id="应用层" tabindex="-1"><a class="header-anchor" href="#应用层"><span>应用层</span></a></h4><ul><li><strong>SpringBoot</strong>：快速构建Spring项目，简化配置开发。</li><li><strong>SpringMVC</strong>：Spring框架的一个模块，可无缝集成。</li><li><strong>Spring Task</strong>：定时任务框架。</li><li><strong>HttpClient</strong>：实现HTTP请求发送。</li><li><strong>Spring Cache</strong>：数据缓存框架。</li><li><strong>JWT</strong>：用户身份验证标记。</li><li><strong>阿里云OSS</strong>：对象存储服务，主要存储文件如图片等。</li><li><strong>Swagger</strong>：自动生成接口文档并测试接口。</li><li><strong>POI</strong>：封装Excel表格操作。</li><li><strong>WebSocket</strong>：通信协议，用于来单、催单功能。</li></ul><h4 id="数据层" tabindex="-1"><a class="header-anchor" href="#数据层"><span>数据层</span></a></h4><ul><li><strong>MySQL</strong>：关系型数据库，存储核心业务数据。</li><li><strong>Redis</strong>：内存数据库，常用作缓存。</li><li><strong>Mybatis</strong>：持久层开发。</li><li><strong>PageHelper</strong>：分页插件。</li><li><strong>Spring Data Redis</strong>：简化Java操作Redis的API。</li></ul><h4 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h4><ul><li><strong>Git</strong>：版本控制工具。</li><li><strong>Maven</strong>：项目构建工具。</li><li><strong>JUnit</strong>：单元测试工具。</li><li><strong>Postman</strong>：接口测试工具。</li></ul><h2 id="开发环境搭建" tabindex="-1"><a class="header-anchor" href="#开发环境搭建"><span>开发环境搭建</span></a></h2><table><thead><tr><th>序号</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>sky-take-out</td><td>Maven父工程，统一管理依赖版本，聚合其他子模块</td></tr><tr><td>2</td><td>sky-common</td><td>子模块，存放公共类，例如工具类、常量类、异常类等</td></tr><tr><td>3</td><td>sky-pojo</td><td>子模块，存放实体类、VO、DTO等</td></tr><tr><td>4</td><td>sky-server</td><td>子模块，后端服务，存放配置文件、Controller、Service、Mapper等</td></tr></tbody></table><h3 id="sky-common模块包结构" tabindex="-1"><a class="header-anchor" href="#sky-common模块包结构"><span>sky-common模块包结构</span></a></h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>constant</td><td>存放相关常量类</td></tr><tr><td>context</td><td>存放上下文类</td></tr><tr><td>enumeration</td><td>项目的枚举类存储</td></tr><tr><td>exception</td><td>存放自定义异常类</td></tr><tr><td>json</td><td>处理json转换的类</td></tr><tr><td>properties</td><td>存放SpringBoot相关的配置属性类</td></tr><tr><td>result</td><td>返回结果类的封装</td></tr><tr><td>utils</td><td>常用工具类</td></tr></tbody></table><h3 id="sky-pojo模块包结构" tabindex="-1"><a class="header-anchor" href="#sky-pojo模块包结构"><span>sky-pojo模块包结构</span></a></h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Entity</td><td>实体，通常和数据库中的表对应</td></tr><tr><td>DTO</td><td>数据传输对象，通常用于程序中各层之间传递数据</td></tr><tr><td>POJO</td><td>普通Java对象，只有属性和对应的getter和setter</td></tr></tbody></table><h3 id="sky-server模块包结构" tabindex="-1"><a class="header-anchor" href="#sky-server模块包结构"><span>sky-server模块包结构</span></a></h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>controller</td><td>存放controller类</td></tr><tr><td>interceptor</td><td>存放拦截器类</td></tr><tr><td>mapper</td><td>存放mapper接口</td></tr><tr><td>service</td><td>存放service类</td></tr><tr><td>SkyApplication</td><td>启动类</td></tr></tbody></table><h2 id="swagger" tabindex="-1"><a class="header-anchor" href="#swagger"><span>Swagger</span></a></h2><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务；knife4j 是为 Java MVC 框架集成 Swagger 生成 Api 文档的增强解决方案。</p><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h3><ol><li>导入 knife4j 的maven坐标，在pom.xml中添加依赖。</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">com.github.xiaoymin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">knife4j-spring-boot-starter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在配置类中加入 knife4j 相关配置。</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* WebMvcConfiguration.java</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* 通过knife4j生成接口文档</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@return</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Bean</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Docket </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	ApiInfo</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> apiInfo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ApiInfoBuilder</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">苍穹外卖项目接口文档</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2.0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">description</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">苍穹外卖项目接口文档</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">build</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">	Docket</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> docket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Docket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">DocumentationType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SWAGGER_2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apiInfo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">apiInfo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">select</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">RequestHandlerSelectors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">basePackage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.sky.controller</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">paths</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">PathSelectors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">build</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">	return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> docket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>设置静态资源映射，否则接口文档页面无法访问。</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* WebMvcConfiguration.java</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* 设置静态资源映射</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@param</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> registry</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">protected</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> addResourceHandlers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ResourceHandlerRegistry registry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">	registry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addResourceHandler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/doc.html</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addResourceLocations</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">classpath:/META-INF/resources/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">	registry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addResourceHandler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/webjars/**</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addResourceLocations</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">classpath:/META-INF/resources/webjars/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>访问测试</li></ol><p>接口文档访问路径为 http://ip:port/doc.html ---&gt; http://localhost:8080/doc.html</p><p>接口测试:测试登录功能</p><p>思考：通过 Swagger 就可以生成接口文档，那么我们就不需要 Yapi 了？</p><ol><li>Yapi 是设计阶段使用的工具，管理和维护接口</li><li>Swagger 在开发阶段使用的框架，帮助后端开发人员做后端的接口测试</li></ol><h3 id="常用注解" tabindex="-1"><a class="header-anchor" href="#常用注解"><span>常用注解</span></a></h3><p>通过注解可以控制生成的接口文档，使接口文档拥有更好的可读性，常用注解如下：</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Api</td><td>用在类上，例如Controller，表示对类的说明</td></tr><tr><td>@ApiModel</td><td>用在类上，例如entity、DTO、VO</td></tr><tr><td>@ApiModelProperty</td><td>用在属性上，描述属性信息</td></tr><tr><td>@ApiOperation</td><td>用在方法上，例如Controller的方法，说明方法的用途、作用</td></tr></tbody></table><p>接下来，使用上述注解，生成可读性更好的接口文档。</p>`,55)]))}const p=i(e,[["render",l]]),d=JSON.parse('{"path":"/article/sky-takeout-1/","title":"苍穹外卖 | Day 1 起步","lang":"zh-CN","frontmatter":{"title":"苍穹外卖 | Day 1 起步","createTime":"2025/07/11 16:23:00","permalink":"/article/sky-takeout-1/","description":"软件开发流程 需求分析 完成需求规格说明书、产品原型编写。 需求规格说明书：使用 Word 文档来描述当前项目的各个组成部分，如：系统定义、应用环境、功能规格、性能需求等。 产品原型：一般是通过网页 (html) 的形式展示当前的页面展示什么样的数据，页面的布局是什么样子的，点击某个菜单，打开什么页面等。 设计 UI设计 数据库设计 接口设计 编码 编...","head":[["meta",{"property":"og:url","content":"https://github.com/MrSibe/MrSibe.github.io/article/sky-takeout-1/"}],["meta",{"property":"og:site_name","content":"西贝的博客"}],["meta",{"property":"og:title","content":"苍穹外卖 | Day 1 起步"}],["meta",{"property":"og:description","content":"软件开发流程 需求分析 完成需求规格说明书、产品原型编写。 需求规格说明书：使用 Word 文档来描述当前项目的各个组成部分，如：系统定义、应用环境、功能规格、性能需求等。 产品原型：一般是通过网页 (html) 的形式展示当前的页面展示什么样的数据，页面的布局是什么样子的，点击某个菜单，打开什么页面等。 设计 UI设计 数据库设计 接口设计 编码 编..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/MrSibe/obsidian_images/main/image-20221106185646994.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T03:18:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T03:18:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"苍穹外卖 | Day 1 起步\\",\\"image\\":[\\"https://raw.githubusercontent.com/MrSibe/obsidian_images/main/image-20221106185646994.png\\"],\\"dateModified\\":\\"2025-09-14T03:18:42.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":4.83,"words":1449},"git":{"updatedTime":1757819922000,"contributors":[{"name":"xibei","username":"xibei","email":"15281741661@qq.com","commits":3,"avatar":"https://avatars.githubusercontent.com/xibei?v=4","url":"https://github.com/xibei"}]},"autoDesc":true,"filePathRelative":"computer/苍穹外卖/sky-takeout-1.md","categoryList":[{"id":"df53ca","sort":10002,"name":"computer"},{"id":"5542b4","sort":10003,"name":"苍穹外卖"}]}');export{p as comp,d as data};
