import{_ as i,c as a,a as n,o as e}from"./app-DMdwLNUM.js";const l={};function t(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="预实验" tabindex="-1"><a class="header-anchor" href="#预实验"><span>预实验</span></a></h2><ul><li>暂时不要从框架仓库拉取内容。从框架仓库拉取内容会导致合并冲突，你们将在实验课后续学习如何解决该问题。即便你们已经知道如何解决合并冲突，我们也希望你们以一种特定的方式解决，所以请暂时不要尝试拉取！</li><li>如果你们已经从框架仓库拉取了内容，请联系助教，了解如何继续进行实验。</li><li>本次实验要求你们在GS平台的lab1中获得满分。如果没有，请在继续实验前联系助教。</li><li>在本次实验中，我们将使用git。在此之前，确保你们的仓库已与GitHub同步。要做到这一点，只需运行：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git push origin master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果该命令执行成功，你就可以继续进行实验了！如果没有成功，你很可能会收到类似这样的错误消息。请按照其中的说明来解决此错误。</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>由于本周是期中考试周，本次实验将比平常时间短。在本次实验中，你将更深入地探究git，并且通过一个有趣的练习再进行一次调试实践。在本次实验结束时，你应该对git工作流程有更深入的理解，并且你的调试技能也应该更加精湛！</p><h2 id="git-的背景" tabindex="-1"><a class="header-anchor" href="#git-的背景"><span>Git 的背景</span></a></h2><p>在这一部分，你将观看一系列讲解Git主要概念的视频，然后进行一些使用Git的实践操作。请观看下面的全部六个视频。大家都知道伊泰说话语速较慢，所以如有需要，你可以随意提高播放速度！</p><ul><li><a href="https://www.youtube.com/watch?v=yWBzCAY_5UI" target="_blank" rel="noopener noreferrer">Git Intro - Part 1</a></li><li><a href="https://www.youtube.com/watch?v=CnMpARAOhFg" target="_blank" rel="noopener noreferrer">Git Intro - Part 2</a></li><li><a href="https://www.youtube.com/watch?v=t0tzTcZESWk" target="_blank" rel="noopener noreferrer">Git Intro - Part 3</a></li><li><a href="https://www.youtube.com/watch?v=ca1oCEMQGRQ" target="_blank" rel="noopener noreferrer">Git Intro - Part 4</a></li><li><a href="https://www.youtube.com/watch?v=dZbj9gjjYv8" target="_blank" rel="noopener noreferrer">Git Intro - Part 5</a></li><li><a href="https://www.youtube.com/watch?v=r0oHi0vXhLE" target="_blank" rel="noopener noreferrer">Git Intro - Part 6</a></li></ul><p>具体来说，观看视频后，你应理解以下概念：</p><ul><li>本地Git工作流程：git add和git commit</li><li>使用git checkout在提交之间切换并更新文件</li><li>分离的HEAD状态</li><li>远程仓库，例如托管在GitHub上的仓库</li><li>本地git与远程仓库的集成：<code>origin/master</code>和<code>skeleton/master</code></li></ul><p>如果你对上述概念有任何疑问，可以参考 <a href="https://sp19.datastructur.es/materials/guides/using-git" target="_blank" rel="noopener noreferrer">Sarah’s Git Guide</a>, <a href="https://sp19.datastructur.es/materials/guides/git-wtfs" target="_blank" rel="noopener noreferrer">Git WTFS</a>（Git怪异技术故障场景——别想歪了！），或者随时向助教请教以厘清概念。</p><p>在此我们要提醒你：警惕你在网上找到的Git相关信息，因为并非所有信息都来自可靠来源。此外，务必在遇到困难时，绝不要照搬从网上找到或朋友那里获取的Git命令——有疑问时一定要问助教。</p><h2 id="git-练习" tabindex="-1"><a class="header-anchor" href="#git-练习"><span>Git 练习</span></a></h2><p>现在，是时候实践你所学的内容了。请记住，本实验要求你在Gradescope上的 Lab 1 自动评分器中获得满分。如果你还没有完成 Lab 1 ，请咨询助教。当你准备好后，请使用以下命令拉取初始代码，但是当你遇到合并冲突时，不要惊慌！请继续阅读以获取更多信息。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> skeleton</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们特意在你的 Lab 1 目录中引入了一个合并冲突。这个练习的目的是让你练习一些Git概念，包括合并冲突、分离头状态，以及在你的 <code>sp21-s***</code> 仓库中检出文件。在这个练习结束时，你应该能更自如地在命令行上操作提交树，使你的文件处于理想状态。</p><p><code>lab1</code> 目录中的合并冲突出现在文件 <code>lab1/Collatz.java</code> 中，你在 Lab 1 中对该文件进行了更新，以打印从 <code>n = 5</code> 开始的 <code>考拉兹序列</code>。在你拉取 <code>lab4</code> 起始代码之前，你的解决方案能够正确打印出考拉兹序列。<code>skeleton</code> 代码库已更新，其中包含 <code>nextNumber(int n)</code> 方法的以下错误实现，该方法返回 <code>n</code> 之后考拉兹序列中的下一个数字：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /** Buggy implementation of nextNumber! */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nextNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n  </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 128</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在我们操之过急之前，如果在完成这项作业的任何阶段遇到任何困难，请务必向助教请教；如果遇到问题，最好尽早让他们参与进来，这样他们也更容易补救。你的任务如下：</p><h3 id="第一步" tabindex="-1"><a class="header-anchor" href="#第一步"><span>第一步</span></a></h3><p>解决合并冲突，确保合并冲突的结果包含该方法的错误版本。换句话说，在你完成合并冲突的解决后， Collatz.java 应该能够编译，并包含 nextNumber 方法的错误实现。</p><p>现在，如果你运行 <code>git log</code>（它会按顺序列出当前提交之前的提交），你应该会看到类似以下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>commit 8f0deeaef048f33a209f6f2fe5927a6fb04cc6cc</span></span>
<span class="line"><span>Merge: 225d73e 7aa1b6f</span></span>
<span class="line"><span>Author: Neil Kulkarni &lt;neil.kulkarni@berkeley.edu&gt;</span></span>
<span class="line"><span>Date:   Sun Feb 7 14:36:52 2021 -0700</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Merge branch &#39;master&#39; of https://github.com/Berkeley-CS61B/skeleton-sp21</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    Fixed the merge conflict in lab4 to contain buggy Collatz!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>commit 7aa1b6fc79cb752e1ed844cd9cdd8c9c21e7f3d4 (HEAD -&gt; master)</span></span>
<span class="line"><span>Author: Neil Kulkarni &lt;neil.kulkarni@berkeley.edu&gt;</span></span>
<span class="line"><span>Date:   Sun Feb 7 14:26:58 2021 -0700</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Added Lab 4 Starter Files</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>commit 4050fd80377d85aaea6c7cdb486e581d8c422534</span></span>
<span class="line"><span>Author: Neil Kulkarni &lt;neil.kulkarni@berkeley.edu&gt;</span></span>
<span class="line"><span>Date:   Sat Jan 30 22:56:58 2021 -0800</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Finished Lab 1! Collatz works!</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体来说，你应该看到最新的提交是你解决合并冲突后产生的合并提交，倒数第二新的提交是尼尔添加你从skeleton拉取的实验4起始文件的那次提交。你可能需要往前追溯很久才能看到你完成实验1时所做的提交。例如，我完成实验1时所做的提交信息为“完成实验1！考拉兹猜想算法可用！”。你的提交信息很可能不同，并且提交哈希值、作者和日期也应该不同。记录下你完成实验1时那次提交的提交哈希值。我们将这次提交称为<code>lab1commit</code>，这样在后续步骤中我们就能引用它。</p><h3 id="步骤二" tabindex="-1"><a class="header-anchor" href="#步骤二"><span>步骤二</span></a></h3><p>将其提交到Gradescope上的“Lab 4A: Git Exercise Part A”自动评分器。它将验证你是否正确解决了合并冲突，使<code>nextNumber</code>的错误实现包含在 <code>Collatz.java</code> 中。</p><h3 id="步骤三" tabindex="-1"><a class="header-anchor" href="#步骤三"><span>步骤三</span></a></h3><p>虽然你最近的一次提交在<code>lab1/Collatz.java</code>中引入了一个错误，但幸运的是，你曾有一次提交了<code>Collatz</code>的正确实现，确切地说是在<code>lab1commit</code>中！由于Git中的提交是文件状态的快照，<code>lab1commit</code>存储了<code>Collatz</code>正确版本的快照。不信我？咱们来看看！</p><p>你的下一步是切换到 <code>lab1commit</code>。如果你不记得这个命令的语法，可以查看上面链接的材料。到达那里后，输入 <code>git status</code>。你应该会看到你处于分离头状态。如果你不记得那是什么意思，请查看上面的材料！</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>NeilKulkarni@Neils-MacBook-Pro sp21-s58 % git status</span></span>
<span class="line"><span>HEAD detached at 4050fd8</span></span>
<span class="line"><span>nothing to commit, working tree clean</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记住，在分离头状态下，你可以随意查看当前提交，但不应进行任何更改。让我们看看 <code>lab1/Collatz.java</code>。你应该会看到它包含你之前的解决方案！你可以用任何你喜欢的方式打开这个文件，但我推荐使用cat终端命令，它会打印文件的内容：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/** Class that prints the Collatz sequence starting from a given number.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *  </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@author</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> Neil Kulkarni</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Collatz</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nextNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">%</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ?</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> :</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        while</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            n </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nextNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤四" tabindex="-1"><a class="header-anchor" href="#步骤四"><span>步骤四</span></a></h3><p>现在，通过检切换到最新的提交来脱离分离头状态。你应该验证，由于我们回到了最新的提交，<code>lab1/Collatz.java</code> 又出现了错误的实现：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/** Class that prints the Collatz sequence starting from a given number.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *  </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@author</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> YOUR NAME HERE</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Collatz</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /** Buggy implementation of nextNumber! */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nextNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n  </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 128</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">            return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        while</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            n </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nextNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">n </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤五" tabindex="-1"><a class="header-anchor" href="#步骤五"><span>步骤五</span></a></h3><p>我们已经验证 <code>lab1commit</code> 中 <code>Collatz.java</code> 的内容正确无误，并且我们回到了包含 <code>Collatz.java</code> 错误实现的最新提交。现在，让我们使用 <code>git checkout</code> 将 <code>lab1/Collatz.java</code> 恢复到 <code>lab1commit</code> 中的状态。如果你忘记了如何切换文件，请回顾实验开始时的材料！</p><p>当你切换一个文件时，git 会自动添加该文件。检出后，<code>git status</code> 应返回类似如下内容：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">NeilKulkarni@Neils-MacBook-Pro</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sp21-s58</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> %</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> status</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">On</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Your</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> is</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> up</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> date</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> with</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">origin/master</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Changes</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> be</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> committed:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  (</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">use</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git reset HEAD &lt;file&gt;...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> unstage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">	modified:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   lab1/Collatz.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续，再 <code>cat lab1/Collatz.java</code> 一次。你应该会看到解决方案现在已更新！继续提交并推送你的更改。</p><h3 id="步骤六" tabindex="-1"><a class="header-anchor" href="#步骤六"><span>步骤六</span></a></h3><p>提交到实验4B：Git练习B部分的自动评分器，以获得完成此作业的学分。</p><p>一些临别赠言：我们所做的非常强大。我们利用了git存储文件快照这一特性，并利用它恢复到旧版本！而且，在此过程中，我们学会了如何解决合并冲突！</p><p>这些信息并非仅仅停留在理论层面。当你着手项目时，就会发现它具有实际用途。正如胡格教授常说的，在项目上从头开始是可行的（并且值得鼓励！）。现在，我们有办法做到这一点了！你可以使用 <code>git checkout</code> 命令，将项目文件恢复到你未对其进行任何更改之前的较早提交版本。具体来说，如果你想从头开始恢复一个项目文件（例如 proj 0中的Model.java文件），可以运行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> checkout</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> proj0/game2048/Model.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>一般来说，<code>git checkout master -- &lt;file&gt;</code> 会将文件恢复到最近一次提交时的状态。现在你知道了如何重启一个项目，或者如果你对重启不满意，如何将已重启的项目恢复到 master 分支上的状态！</p><h2 id="一个调试谜题" tabindex="-1"><a class="header-anchor" href="#一个调试谜题"><span>一个调试谜题</span></a></h2><p>另一个需要学习的重要技能是如何进行详尽的调试。如果调试得当，即使你在调试不完全理解的代码时，调试也应能让你迅速缩小程序缺陷可能存在的范围。考虑以下场景：</p><p>你们公司，Flik 公司，发布了一个很棒的软件库，名为Flik.java，它能够判断两个整数是否相同。你收到一封来自名为“Horrible Steve”的人的邮件，他描述了使用你们库时遇到的一个问题：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>亲爱的弗利克企业，</span></span>
<span class="line"><span></span></span>
<span class="line"><span>你们的库非常糟糕。请看附件中的代码。它应该输出500，但实际上输出的是128。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>（附件：HorribleSteve.java）”</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用以下任意技术组合，找出错误是出在“糟糕史蒂夫”的代码中，还是在弗利克企业的库中：</p><ul><li>为 Flik库编写JUnit测试。如果你想尝试这个方法，你需要在 <code>flik</code> 目录中创建一个新文件，并导入junit。参考之前问题中的测试，了解如何操作。</li><li>使用IntelliJ调试器，特别是<strong>条件断点</strong>或<strong>异常中断</strong>，你在 Lab 3 中学过如何操作！</li><li>使用打印语句。</li><li>重构“糟糕史蒂夫”的代码。重构意味着在不改变功能的情况下改变语法。这可能很难做到，因为“糟糕史蒂夫”的代码使用了很多奇怪的东西。</li></ul><p>一旦你找到程序缺陷，修复它并将你的代码提交到<code>Lab 4: Debugging autograder</code>。这部分的自动评分器使用隐藏测试，所以你无法从自动评分器（AG）获得关于该程序缺陷的任何信息。如果你认为已修复程序缺陷，但未通过自动评分器，请咨询助教。</p><p>提示：JUnit提供了方法<code>assertTrue(boolean)</code>和<code>assertTrue(String,boolean)</code>，你可能会发现它们很有用。</p>`,55)]))}const k=i(l,[["render",t]]),d=JSON.parse('{"path":"/CS_61B/hgoeru30/","title":"Lab 4","lang":"zh-CN","frontmatter":{"title":"Lab 4","createTime":"2025/05/10 17:00:25","permalink":"/CS_61B/hgoeru30/","description":"预实验 暂时不要从框架仓库拉取内容。从框架仓库拉取内容会导致合并冲突，你们将在实验课后续学习如何解决该问题。即便你们已经知道如何解决合并冲突，我们也希望你们以一种特定的方式解决，所以请暂时不要尝试拉取！ 如果你们已经从框架仓库拉取了内容，请联系助教，了解如何继续进行实验。 本次实验要求你们在GS平台的lab1中获得满分。如果没有，请在继续实验前联系助教...","head":[["meta",{"property":"og:url","content":"https://github.com/MrSibe/MrSibe.github.io/CS_61B/hgoeru30/"}],["meta",{"property":"og:site_name","content":"西贝的博客"}],["meta",{"property":"og:title","content":"Lab 4"}],["meta",{"property":"og:description","content":"预实验 暂时不要从框架仓库拉取内容。从框架仓库拉取内容会导致合并冲突，你们将在实验课后续学习如何解决该问题。即便你们已经知道如何解决合并冲突，我们也希望你们以一种特定的方式解决，所以请暂时不要尝试拉取！ 如果你们已经从框架仓库拉取了内容，请联系助教，了解如何继续进行实验。 本次实验要求你们在GS平台的lab1中获得满分。如果没有，请在继续实验前联系助教..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T03:18:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T03:18:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lab 4\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-14T03:18:42.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":9.9,"words":2971},"git":{"updatedTime":1757819922000,"contributors":[{"name":"xibei","username":"xibei","email":"15281741661@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/xibei?v=4","url":"https://github.com/xibei"}]},"autoDesc":true,"filePathRelative":"notes/CS-61B/Lab 4.md"}');export{k as comp,d as data};
