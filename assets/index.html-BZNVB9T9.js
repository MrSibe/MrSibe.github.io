import{_ as t,c as i,a as o,o as r}from"./app-DMdwLNUM.js";const s={};function a(n,e){return r(),i("div",null,e[0]||(e[0]=[o("<p>上节课我们介绍了 DLList 和 Array，接下来这节课我们将想办法优化 Array。</p><p>假如我们现在要获取数组或者链表中间位置的一个元素，哪个数据结构会更快？答案是数组，因为数组的 <code>get</code> 方法时间复杂度为 <code>O(1)</code>，而链表需要遍历，为 <code>O(N)</code>。</p><p>相反，如果我们往满的一个数组里添加一个新元素，我们可能就需要创立一个新的更大的数组，再把原数组的内容拷贝过去，再添加一个新元素；链表就很简单，创建一个节点，原链表的尾指针指向它就结束了。</p><p>因此我们需要优化添加元素的方法。原来是添加一个元素，size 加一，我们也可以添加一个元素 size 加 100，这样后面的添加操作就不需要 resize 了。</p><p>还有就是，有可能 size 为 100000，但是实际只用了 10 个元素，太浪费空间了。解决办法是设置一个变量 <code>R</code>，表示使用空间和总空间的比例。当比例小于某个值的时候，进行一次 resize，减少空间的占用。</p>",5)]))}const p=t(s,[["render",a]]),m=JSON.parse('{"path":"/CS_61B/zy8myou4/","title":"7. ALists, Resizing, vs. SLists","lang":"zh-CN","frontmatter":{"title":"7. ALists, Resizing, vs. SLists","createTime":"2025/04/30 16:56:15","permalink":"/CS_61B/zy8myou4/","description":"上节课我们介绍了 DLList 和 Array，接下来这节课我们将想办法优化 Array。 假如我们现在要获取数组或者链表中间位置的一个元素，哪个数据结构会更快？答案是数组，因为数组的 get 方法时间复杂度为 O(1)，而链表需要遍历，为 O(N)。 相反，如果我们往满的一个数组里添加一个新元素，我们可能就需要创立一个新的更大的数组，再把原数组的内容...","head":[["meta",{"property":"og:url","content":"https://github.com/MrSibe/MrSibe.github.io/CS_61B/zy8myou4/"}],["meta",{"property":"og:site_name","content":"西贝的博客"}],["meta",{"property":"og:title","content":"7. ALists, Resizing, vs. SLists"}],["meta",{"property":"og:description","content":"上节课我们介绍了 DLList 和 Array，接下来这节课我们将想办法优化 Array。 假如我们现在要获取数组或者链表中间位置的一个元素，哪个数据结构会更快？答案是数组，因为数组的 get 方法时间复杂度为 O(1)，而链表需要遍历，为 O(N)。 相反，如果我们往满的一个数组里添加一个新元素，我们可能就需要创立一个新的更大的数组，再把原数组的内容..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T03:18:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T03:18:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. ALists, Resizing, vs. SLists\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-14T03:18:42.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.06,"words":319},"git":{"updatedTime":1757819922000,"contributors":[{"name":"xibei","username":"xibei","email":"15281741661@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/xibei?v=4","url":"https://github.com/xibei"}]},"autoDesc":true,"filePathRelative":"notes/CS-61B/CS_61B_7.md"}');export{p as comp,m as data};
